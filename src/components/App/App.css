html,
body,
#react-root {
  height: 100%;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0px;
}

img {
  display: inline-block;
  max-width: 100%;
}

/* --------------------------------------------------------------------------------
Container
-------------------------------------------------------------------------------- */

.container {
  padding: 20px;
}

/* --------------------------------------------------------------------------------
Button
-------------------------------------------------------------------------------- */

.btn {
  display: inline-block;
  padding: 10px 20px;
  border-color: #014041;
  border-width: 1px 1px 3px;
  border-radius: 4px;
  background-color: #00acb0;
  color: #f8f8f8;
  font-size: 1.1rem;
  outline: 0;
  cursor: pointer;
}

.btn_sizeMin {
  min-height: 50px;
  min-width: 100px;
}

.btn_sizeSm {
  padding: 10px 15px;
  font-size: 0.8rem;
}

.btn_sizeFull {
  display: block;
  width: 100%;
}

.btn:hover {
  background-color: #008183;
  text-decoration: none;
}

/* This line makes the "Register" and "Login" buttons look like links */
.btn_asLink {
  padding: 0;
  border-width: 0;
  border-bottom: 1px solid #444;
  border-radius: 0;
  background: none;
  font: inherit;
  color: #444;
}

.btn_asLink:hover {
  background-color: transparent;
  border-color: #008183;
  color: #008183;
}

/* --------------------------------------------------------------------------------
Alert
-------------------------------------------------------------------------------- */

.alert {
  box-sizing: border-box;
  padding: 15px 10px;
  margin: 15px 0;
  border: 2px solid #e01616;
  background-color: #efefef;
  border-radius: 3px;
  color: #e01616;
  font-size: 0.8rem;
}

/* --------------------------------------------------------------------------------
Form Treatment
-------------------------------------------------------------------------------- */

.formPanel {
  box-sizing: border-box;
  width: 400px;
  max-width: 100%;
  padding: 25px;
  margin: 0 auto 20px;
  background-color: #efefef;
  border-radius: 3px;
  box-shadow: 0 1px 2px rgb(0, 0, 0, 0.4);
}

input {
  margin: 5px;
  margin-bottom: 10px;
}


/* 
  GLOWING STARS BACKGROUND CSS
*/

/* Define a keyframe animation for stars */
/* @keyframes animStar {
  from {
    transform: translateY(0px);
  }
  to {
    transform: translateY(-2000px);
  }
} */

/* Function to generate multiple box-shadow values for stars */
/* @function multiple-box-shadow($number_of_stars) {
  $value: "#{random(2000)}px #{random(2000)}px #FFF"; 
  @for $i from 2 through $number_of_stars {
    $value: "#{$value}, #{random(2000)}px #{random(2000)}px #FFF";
  }
  @return unquote($value); // Return the concatenated value
}


$shadows-small: multiple-box-shadow(700); // Small stars
$shadows-medium: multiple-box-shadow(200); // Medium stars
$shadows-big: multiple-box-shadow(100); // Big stars

// Styling for the star layers container */
/* .star-layers {
  height: 100vh;
  background: radial-gradient(ellipse at bottom, #85cb33 0%, #100b00 100%);
  overflow: hidden;
  position: relative;

  // Styling for each star layer
  .star-layer {
    position: absolute;
    width: 1px;
    height: 1px;
    background: transparent;

    &::after {
      content: " ";
      position: absolute;
      top: 2000px;
      width: 1px;
      height: 1px;
      background: transparent;
    }
  }

  #stars {
    box-shadow: $shadows-small;
    animation: animStar 50s linear infinite;
    &::after {
      box-shadow: $shadows-small; // Apply small star shadows to pseudo-element
    }
  }

  #stars2 {
    width: 2px;
    height: 2px;
    box-shadow: $shadows-medium; // Apply medium star shadows
    animation: animStar 100s linear infinite;
    &::after {
      width: 2px;
      height: 2px;
      box-shadow: $shadows-medium; // Apply medium star shadows to pseudo-element
    }
  }

  #stars3 {
    width: 3px;
    height: 3px;
    box-shadow: $shadows-big; // Apply big star shadows
    animation: animStar 150s linear infinite;
    &::after {
      width: 3px;
      height: 3px;
      box-shadow: $shadows-big; // Apply big star shadows to pseudo-element
    }
  }
} */